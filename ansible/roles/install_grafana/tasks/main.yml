---
- name: Install prerequisites
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
  loop:
    - apt-transport-https
    - software-properties-common
    - wget
  become: true

- name: Download Grafana GPG key
  ansible.builtin.get_url:
    url: https://apt.grafana.com/gpg.key
    dest: /etc/apt/keyrings/grafana.key
  become: true

- name: Add Grafana repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/grafana.key] https://apt.grafana.com stable main"
    state: present
  become: true

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: yes
  become: true

- name: Install Grafana
  ansible.builtin.apt:
    name: grafana={{ grafana_version }}
    state: present
    allow_downgrade: yes
  become: true

- name: Configure Grafana to listen on port 3000
  ansible.builtin.lineinfile:
    path: /etc/grafana/grafana.ini
    regexp: "^;http_port = 3000$"
    line: "http_port = 3000"
    state: present

- name: Enable Grafana service
  ansible.builtin.service:
      name: grafana-server
      enabled: yes
  notify: Restart grafana-server

- name: Download dashboard JSON file
  ansible.builtin.get_url:
    url: "https://grafana.com/api/dashboards/{{node_exporter_dashboard_id}}/revisions/36/download"
    dest: "/tmp/dashboard.json"

- name: Load dashboard JSON
  ansible.builtin.slurp:
    src: "/tmp/dashboard.json"
  register: dashboard_json

- name: Configure datasource for Redis
  ansible.builtin.uri:
    url: http://{{grafana_host}}:3000/api/datasources
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_pass }}"
    body_format: json
    body: '{"name":"{{ redis_datasource_name }}","type":"prometheus","url":"http://{{redis_host}}:9090","access":"proxy"}'
    status_code: 200
    force_basic_auth: true
    validate_certs: no

- name: Configure datasource for Mariadb
  ansible.builtin.uri:
    url: http://{{grafana_host}}:3000/api/datasources
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_pass }}"
    body_format: json
    body: '{"name":"{{ mariadb_datasource_name }}","type":"prometheus","url":"http://{{mariadb_host}}:9090","access":"proxy"}'
    status_code: 200
    force_basic_auth: true
    validate_certs: no

- name: Configure datasource for NextCloud
  ansible.builtin.uri:
    url: http://{{grafana_host}}:3000/api/datasources
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_pass }}"
    body_format: json
    body: '{"name":"{{ nextcloud_datasource_name }}","type":"prometheus","url":"http://{{nextcloud_host}}:9090","access":"proxy","isDefault":true}'
    status_code: 200
    force_basic_auth: true
    validate_certs: no

- name: Create dashboard for Nextcloud Architecture
  ansible.builtin.uri:
    url: "http://{{grafana_host}}:3000/api/dashboards/db"
    method: POST
    user: "{{ grafana_user }}"
    password: "{{ grafana_pass }}"
    body_format: json
    body:
      '{"dashboard": {"uid": null,"title": "Nextcloud Architecture",{% for key, value in (dashboard_json.content | b64decode | from_json).items() if key != "title" and key != "uid" %}
      "{{ key }}": {{ value | to_json }},
      {% endfor %}} ,"overwrite": false,"inputs": [{"name": "DS_PROMETHEUS", "type": "datasource", "pluginId": "prometheus", "value": "{{ nextcloud_datasource_name }}"}]}'
    status_code: 200
    force_basic_auth: true
    validate_certs: no
  vars:
    dashboard_result: "{{ dashboard_result }}"
