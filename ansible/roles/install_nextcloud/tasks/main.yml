---
- name: Install Apache and PHP modules
  ansible.builtin.apt:
    name:
      - wget
      - unzip
      - apache2
      - libgd3
      - php
      - php-apcu
      - php-bcmath
      - php-cli
      - php-common
      - php-curl
      - php-gd
      - php-gmp
      - php-imagick
      - php-intl
      - php-mbstring
      - php-mysql
      - php-zip
      - php-xml
      - php-redis
      - libmagickcore-6.q16-6-extra
    state: present
    update_cache: yes
  become: true
  notify:
    - Restart Apache service

- name: Download Nextcloud
  ansible.builtin.get_url:
    url: "https://download.nextcloud.com/server/releases/{{nextcloud_version}}.zip"
    dest: "/tmp/nextcloud.zip"
  become: true

- name: Unzip Nextcloud
  ansible.builtin.unarchive:
    src: "/tmp/nextcloud.zip"
    dest: "/var/www/html/"
    remote_src: yes
  become: true

- name: Copy files and directories from nextcloud to parent directory
  ansible.builtin.command: cp -r /var/www/html/nextcloud/. /var/www/html/

- name: Remove original nextcloud directory
  ansible.builtin.command: rm -r /var/www/html/nextcloud

- name: Set permissions for Nextcloud
  ansible.builtin.file:
    path: "/var/www/html"
    owner: www-data
    group: www-data
    recurse: yes
  become: true

- name: Enable Apache modules
  ansible.builtin.command:
    cmd: "a2enmod {{ item }}"
  loop:
    - rewrite
    - headers
    - env
    - dir
    - mime
    - ssl
  become: true

- name: Enable nextcloud SSL site
  ansible.builtin.command: a2ensite default-ssl
  become: true
  notify:
    - Restart Apache service

- name: Create Nextcloud data directory
  ansible.builtin.file:
    path: /var/nextcloud_data
    state: directory
    owner: www-data
    group: www-data
    mode: "0700"

- name: Include default vars from Mariadb role
  ansible.builtin.include_vars:
    file: ../../install_mariadb/defaults/main.yml
    name: mariadb_defaults_vars

- name: Install Nextcloud and configure database
  ansible.builtin.shell: sudo -u www-data php /var/www/html/occ maintenance:install --database mysql --database-host {{ mariadb_host }} --database-port 3306 --database-name {{ mariadb_defaults_vars.nextcloud_database_name }} --data-dir {{ nextcloud_data_dir }} --database-user {{ mariadb_defaults_vars.nextcloud_database_user }} --database-pass {{ mariadb_defaults_vars.nextcloud_database_password }} --admin-user {{ nextcloud_user }} --admin-pass {{ nextcloud_pass }}
  become: true

- name: Update trusted domains in Nextcloud configuration
  ansible.builtin.lineinfile:
    path: /var/www/html/config/config.php
    line: "    1 => '{{nextcloud_public_ip}}'"
    insertafter: "    0 => 'localhost',"
  notify: Restart Apache service

- name: Configuring Redis for nextcloud
  ansible.builtin.lineinfile:
    path: /var/www/html/config/config.php
    insertafter: '\$CONFIG = array \('
    line: |
      'memcache.local' => '\OC\Memcache\APCu',
      'memcache.distributed' => '\OC\Memcache\Redis',
      'memcache.locking' => '\OC\Memcache\Redis',
      'redis' => array(
          'host' => '{{ redis_host }}',
          'port' => 6379,
      ),

- name: Disable output buffering
  ansible.builtin.lineinfile:
    path: /etc/php/8.1/apache2/php.ini
    regexp: "^output_buffering"
    line: "output_buffering = Off"

- name: Set time for maintenance window, by default 1 am
  ansible.builtin.shell: sudo -u www-data php --define apc.enable_cli=1 /var/www/html/occ config:system:set maintenance_window_start --type=integer --value={{ maintenance_window_time }}
  become: true

- name: Increase PHP memory limit
  ansible.builtin.lineinfile:
    path: /etc/php/8.1/apache2/php.ini
    regexp: "^memory_limit"
    line: "memory_limit = {{ php_memory_limit }}"

- name: Configuring Hungary as Phone Region for nextcloud
  ansible.builtin.lineinfile:
    path: /var/www/html/config/config.php
    insertafter: '\$CONFIG = array \('
    line: "  'default_phone_region' => '{{ phone_region }}',"
  notify: Restart Apache service

- name: Restrict access to data directory
  ansible.builtin.template:
    src: apache2.conf.j2
    dest: /etc/apache2/apache2.conf
  notify: Restart Apache service

- name: Include Prometheus setup
  include_role:
    name: install_prometheus
  when: enable_grafana

- name: Include node_exporter setup
  include_role:
    name: install_node_exporter
  when: enable_grafana

- name: Add job to Prometheus configuration
  ansible.builtin.blockinfile:
    path: "/etc/prometheus/prometheus.yml"
    block: |
      {% filter indent(width=2, first=true) %}
      - job_name: 'remote_collector'
        scrape_interval: 10s
        static_configs:
          - targets: ['{{nextcloud_host}}:9100']
      {% endfilter %}
    insertafter: EOF
    state: present
  notify: Restart prometheus service
  when: enable_grafana

- name: Add a backup script to backup Data dir
  ansible.builtin.template:
    src: backup_script.sh.j2
    dest: /root/backup_script.sh
    mode: '700'

- name: Run backups at 2 am everyday
  ansible.builtin.cron:
    name: "backup cronjob"
    minute: "{{ backup_minute }}"
    hour: "{{ backup_hour }}"
    job: "/root/backup_script.sh"